<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.osh.rvs.mapper.qf.MaterialFactMapper">

	<!-- cache eviction="FIFO" flushInterval="60000" size="512" readOnly="true"> 
		</cache -->

	<select id="searchMaterial" parameterType="MaterialFactEntity" resultType="MaterialFactEntity">
	<![CDATA[ 
		SELECT 
			a.material_id,
			omr_notifi_no as sorc_no,
			a.model_id,
			m.name as model_name,
			CASE
				WHEN a.pat_id IS NOT NULL THEN a.pat_id
				WHEN a.level in (1,2,3) THEN m.default_pat_id
				ELSE m.default_cell_pat_id
			END as category_kind,
			a.serial_no,
			a.level,
			a.agreed_date,
			a.direct_flg,
			a.fix_type,
			CASE
				WHEN a.wip_date <= date_add(current_date, interval -30 day)
				THEN wip_date 
				ELSE NULL
			END as inline_time, -- wip_date
			a.wip_location,
			a.scheduled_expedited,
			a.unrepair_flg,
			a.service_repair_flg,
		    (select finish_time from production_feature where material_id = a.material_id and position_id IN (select position_id from position where special_page = 'quotation') and operate_result not in (5, 8) order by (1-ISNULL(action_time)), action_time desc limit 1) as quotation_time ,
			exists (
		      select material_id from production_feature p2
		        where p2.material_id = a.material_id
		        and p2.position_id = 15
		        and p2.rework = 0
		    ) as img_check,
		    0 as ccd_change,
		    (select operate_result from production_feature where material_id = a.material_id and position_id = 15 and rework = 0 and operate_result not in (5, 8) order by (1-ISNULL(action_time)), action_time desc limit 1) as img_operate_result ,
		    a.quotation_first as ccd_operate_result,
			case 
				when `mp`.material_id is null then -1 
				when `mp`.bo_contents is null then 0
				else 1
			end as bo_flg,
			ip.seq,
			new_model.model_id as new_model
		 from 
	    material a
			JOIN
		production_feature b ON
			a.material_id = b.material_id and 
			b.position_id in(select position_id from position where special_page = 'quotation') and
			b.operate_result = 2
			JOIN
		v_model m
			ON a.model_id = m.model_id
		LEFT JOIN material_partial mp
			ON `a`.material_id = `mp`.material_id
			AND `mp`.occur_times = 1
		LEFT JOIN inline_plan ip
			ON `a`.material_id = `ip`.material_id
left join (select model_id from model mdl where not exists (select 1 from material where break_back_flg = 0 and inline_time is not null
and model_id = mdl.model_id)) new_model
on a.model_id = new_model.model_id
	]]>
		<where>
				a.break_back_flg = 0 and
				a.inline_time is null
			<if test="sorc_no!= null and sorc_no!= '' ">
				and omr_notifi_no LIKE CONCAT('%', #{sorc_no}, '%')
			</if>
			<if test="model_id!= null and model_id !=''">
				and a.model_id = #{model_id}
			</if>
			<if test="serial_no!= null and serial_no!= '' ">
				and a.serial_no = #{serial_no}
			</if>
			<if test="level!= null">
				and a.level = #{level}
			</if>
			<if test="direct_flg!= null">
				and a.direct_flg = #{direct_flg}
			</if>
			<if test="fix_type== null">
				and (a.fix_type = 1 OR (a.fix_type = 2 AND a.outline_time IS NULL))
			</if>
			<if test="fix_type == 1">
				and a.fix_type = 1
			</if>
			<if test="fix_type == 2">
				and a.fix_type = 2 AND a.outline_time IS NULL
			</if>
			<if test="bo_flg == 0">
				and (`mp`.material_id is not null AND `mp`.bo_contents is null)
			</if>
			<if test="bo_flg == 1">
				and (`mp`.material_id is not null AND `mp`.bo_contents is not null)
			</if>
			<if test="agreed_date_start!= null and agreed_date_start!= '' ">
				<![CDATA[ 
					and a.agreed_date >= #{agreed_date_start}
				]]>
			</if>
			<if test="agreed_date_end!= null and agreed_date_end!= '' ">
				<![CDATA[ 
					and a.agreed_date <= #{agreed_date_end}
				]]>
			</if>
			<if test="wip_location!= null and wip_location!= '' ">
				and a.wip_location like CONCAT('%','${wip_location}','%')
			</if>
		</where>
			order by a.agreed_date IS NULL, a.scheduled_expedited DESC, a.direct_flg desc, a.unrepair_flg desc
	</select>
	
	<select id="searchInlineMaterial" resultType="MaterialFactEntity">
		<![CDATA[ 
		SELECT 
			a.material_id,
			omr_notifi_no as sorc_no,
			a.model_id,
			(select name from model where model_id = a.model_id) as model_name,
			(select name from section where section_id = a.section_id) as section_name,
			a.serial_no,
			a.level,
			a.agreed_date,
			a.direct_flg,
			a.fix_type,
			a.wip_location,
			(select count(1) from production_feature where material_id = a.material_id and position_id = 16) as unrepair_flg,
			a.inline_time
		 from material a where date(a.inline_time) = curdate()
	]]>
		
	</select>
	
	<update id="updateAgreedDate" parameterType="MaterialFactEntity">
		<![CDATA[ 
			UPDATE material SET agreed_date = #{agreed_date},
			scheduled_date = CASE WHEN scheduled_expedited = 0 THEN #{scheduled_date} ELSE scheduled_date END
			where material_id = #{material_id}
		]]>
	</update>

	<update id="updateAgreedDateBySorc" parameterType="MaterialFactEntity">
		<![CDATA[ 
			UPDATE material SET agreed_date = #{agreed_date} 
			WHERE omr_notifi_no = #{sorc_no} AND agreed_date IS NULL AND break_back_flg = 0;
		]]>
	</update>

	<update id="updateUnrepairBySorc" parameterType="MaterialFactEntity">
		<![CDATA[ 
			UPDATE material SET unrepair_flg = 1,
			agreed_date = CASE WHEN agreed_date IS NULL THEN #{agreed_date} ELSE agreed_date END
			WHERE sorc_no = #{sorc_no} AND unrepair_flg <> 1
		]]>
	</update>

	<update id="updateInline" parameterType="MaterialFactEntity">
		<![CDATA[ 
			UPDATE material SET 
				inline_time = now(),
				scheduled_date = #{scheduled_date},
				section_id = #{section_id},
				wip_location = null,
				pat_id = COALESCE(#{pat_id}, pat_id),
				quotation_first = ${quotation_first}
			where material_id = #{material_id}
		]]>
	</update>
	

	<select id="getTwoDaysOfLines" parameterType="java.lang.String" resultType="java.lang.String">
		<![CDATA[ 			
			select `f_getworkdays`((SELECT agreed_date FROM material where material_id=#{material_id}), current_date) < 2 as intime from dual 
		]]>
	</select>

	<update id="assginCCDChange" parameterType="java.lang.String">
		<![CDATA[ 			
			UPDATE material SET 
				quotation_first =
				CASE
					WHEN quotation_first = 9 THEN 0
					ELSE 9
				END
			WHERE material_id = #{material_id};
		]]>
	</update>

	<select id="getInlinePlan" parameterType="java.lang.String" resultType="MaterialEntity">
		<![CDATA[ 			
			select ma.inline_time, omr_notifi_no as sorc_no, ma.model_id, mdl.name as model_name, ma.serial_no, ma.agreed_date,
				coalesce(ma.wip_location, ip.wip_location) as wip_location, ma.fix_type, ma.service_repair_flg, ip.section_id,
				sec.name as section_name, ip.pat_id, pat.name as operator_name, ma.material_id,
				case 
				WHEN
					ma.inline_time is not null and exists (select 1 from production_feature where material_id = ma.material_id and position_id = 25) THEN 9
				WHEN
					ma.inline_time is not null THEN 0
				WHEN
					ma.level not in (56,57,58,9,91,92,93,96,97,98) THEN ma.quotation_first
				WHEN
					not exists (select 1 from material_partial where material_id = ma.material_id)
				THEN 1
				WHEN
					exists (select 1 from material_partial where material_id = ma.material_id and bo_flg not in (0,2))
				THEN 2
				ELSE 0
				END	as quotation_first,
				ma.level,
				CASE
					WHEN ma.wip_date <= date_add(current_date, interval -30 day)
					THEN 
					(select operate_result from production_feature where material_id = ma.material_id and position_id = 15 and rework = 0 and operate_result not in (5, 8) order by (1-ISNULL(action_time)), action_time desc limit 1) 
					ELSE 2
				END
				as operate_result,
				seq as scheduled_expedited
			from material ma
			join v_model mdl on ma.model_id = mdl.model_id
			join inline_plan ip on ma.material_id = ip.material_id
			left join section sec on ip.section_id = sec.section_id
			left join process_assign_template pat on ip.pat_id = pat.process_assign_template_id
			where ip.plan_date = current_date
			order by
				inline_time IS NULL, 
				seq
			;
		]]>
	</select>

	<update id="changeInlinePlan" parameterType="MaterialEntity">
		<![CDATA[ 			
			UPDATE inline_plan SET 
		]]>
		<if test="section_id != null">
			section_id = #{section_id}
		</if>
		<if test="pat_id != null">
			pat_id = #{pat_id}
		</if>
		<if test="scheduled_expedited != null">
			seq = #{scheduled_expedited}
		</if>
		<![CDATA[ 			
			WHERE material_id = #{material_id};
		]]>
	</update>

	<select id="getInlinePlanInfo" parameterType="java.lang.String" resultType="MaterialFactEntity">
		<![CDATA[ 			
SELECT ma.level, ma.agreed_date, ma.fix_type, ma.scheduled_expedited, 
	ip.pat_id, ma.material_id, ip.section_id,
	case when
		ma.quotation_first = 9
	then 'true'
	else null
	end as ccd_change
FROM material ma
join inline_plan ip
on ma.material_id = ip.material_id
where ma.material_id in
		]]>
			<foreach item="material_id" collection="array" open="(" separator="," close=")">
				#{material_id}
 			</foreach> 
		<![CDATA[
;
		]]>
	</select>

	<select id="getMaxInlinePlanSeqToday" parameterType="date" resultType="int">
		<![CDATA[ 			
SELECT max(seq) as seq
FROM `inline_plan`
WHERE `plan_date` = current_date
;
		]]>
	</select>

	<insert id="createInlinePlan" parameterType="MaterialFactEntity">
		<![CDATA[ 			
INSERT INTO `inline_plan`
(`material_id`,
`plan_date`,
`seq`)
VALUES
(#{material_id},
current_date,
#{seq});
		]]>
	</insert>

</mapper>