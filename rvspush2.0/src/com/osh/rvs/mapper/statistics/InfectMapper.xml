<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.osh.rvs.mapper.statistics.InfectMapper">

	<!-- cache eviction="FIFO" flushInterval="60000" size="512" readOnly="true"> 
		</cache -->

	<select id="getSingleOfMonth" resultType="map">
		<![CDATA[ 
			select dm.devices_manage_id, 
			dm.manage_code, cfm.check_manage_code, cfm.sheet_file_name,
			cfm.check_file_manage_id from devices_manage dm join
			(select manage_id,check_file_manage_id from device_check_result dcr where dcr.check_confirm_time between #{monthStart} and #{monthEnd}
			and checked_status <> 0
			group by manage_id,check_file_manage_id
			UNION
			SELECT manage_id,check_file_manage_id FROM device_manager_confirm where confirm_time between #{monthStart} and #{monthEnd}
			group by manage_id,check_file_manage_id
			) cim
			on dm.devices_manage_id = cim.manage_id
			join check_file_manage cfm
			on dm.device_type_id = cfm.device_type_id
			and cfm.filing_means = 1 and cycle_type in (7,6)
			and cim.check_file_manage_id = cfm.check_file_manage_id
			order by dm.provide_date
			;
		]]>
	</select>

	<select id="getOnPositionOfMonth" resultType="map">
		<![CDATA[ 
select dm.devices_manage_id, cfm.check_file_manage_id, cfm.check_manage_code, cfm.sheet_file_name, 
dm.section_id, dm.position_id, cast(dt.specialized as unsigned) as specialized
from devices_manage dm 
join device_type dt on dm.device_type_id = dt.device_type_id
join
			(select manage_id,check_file_manage_id from device_check_result dcr where dcr.check_confirm_time between #{monthStart} and #{monthEnd}
			and checked_status <> 0
			group by manage_id,check_file_manage_id
			UNION
			SELECT manage_id,check_file_manage_id FROM device_manager_confirm where confirm_time between #{monthStart} and #{monthEnd}
			group by manage_id,check_file_manage_id
			) cim
on dm.devices_manage_id = cim.manage_id
join check_file_manage cfm
on cfm.filing_means = 2 and cycle_type in (7,6)
			and cim.check_file_manage_id = cfm.check_file_manage_id
order by section_id, position_id, check_file_manage_id, dm.manage_code
;
		]]>
	</select>

	<select id="getOnLineOfMonth" resultType="map">
		<![CDATA[ 
select dm.devices_manage_id, cfm.check_file_manage_id, cfm.check_manage_code, cfm.sheet_file_name, 
dm.section_id, dm.line_id, cast(dt.specialized as unsigned) as specialized
from devices_manage dm 
join device_type dt on dm.device_type_id = dt.device_type_id
join
			(select manage_id,check_file_manage_id from device_check_result dcr where dcr.check_confirm_time between #{monthStart} and #{monthEnd}
			and checked_status <> 0
			group by manage_id,check_file_manage_id
			UNION
			SELECT manage_id,check_file_manage_id FROM device_manager_confirm where confirm_time between #{monthStart} and #{monthEnd}
			group by manage_id,check_file_manage_id
			) cim
on dm.devices_manage_id = cim.manage_id
join check_file_manage cfm
on cfm.filing_means = 3 and cycle_type in (7,6)
			and cim.check_file_manage_id = cfm.check_file_manage_id
order by section_id, line_id, check_file_manage_id, dm.manage_code
;
		]]>
	</select>

	<insert id="recordFileData" parameterType="CheckedFileStorageEntity">
REPLACE INTO `checked_file_storage`
(`check_file_manage_id`,
`filing_date`,
`devices_manage_id`,
`start_record_date`,
`storage_file_name`)
VALUES
(#{check_file_manage_id},
#{filing_date},
#{devices_manage_id},
#{start_record_date},
#{storage_file_name});
	</insert>

	<select id="getSingleOfPeriod" resultType="map">
		<![CDATA[ 
			select dm.devices_manage_id, 
			dm.manage_code, cfm.check_manage_code, cfm.sheet_file_name,
			cfm.check_file_manage_id from devices_manage dm join
			(select manage_id,check_file_manage_id from device_check_result dcr where dcr.check_confirm_time between #{periodStart} and #{periodEnd}
			and checked_status <> 0
			group by manage_id,check_file_manage_id
			UNION
			SELECT manage_id,check_file_manage_id FROM device_manager_confirm where confirm_time between #{periodStart} and #{periodEnd}
			group by manage_id,check_file_manage_id
			) cim
			on dm.devices_manage_id = cim.manage_id
			join check_file_manage cfm
			on dm.device_type_id = cfm.device_type_id
			and cfm.filing_means = 1 and cycle_type = 8
			and cim.check_file_manage_id = cfm.check_file_manage_id
			order by dm.provide_date
			;
		]]>
	</select>

	<select id="getOnPositionOfPeriod" resultType="map">
		<![CDATA[ 
select dm.devices_manage_id, cfm.check_file_manage_id, cfm.check_manage_code, cfm.sheet_file_name, 
dm.section_id, dm.position_id, cast(dt.specialized as unsigned) as specialized
from devices_manage dm 
join device_type dt on dm.device_type_id = dt.device_type_id
join
			(select manage_id,check_file_manage_id from device_check_result dcr where dcr.check_confirm_time between #{periodStart} and #{periodEnd}
			and checked_status <> 0
			group by manage_id,check_file_manage_id
			UNION
			SELECT manage_id,check_file_manage_id FROM device_manager_confirm where confirm_time between #{periodStart} and #{periodEnd}
			group by manage_id,check_file_manage_id
			) cim
on dm.devices_manage_id = cim.manage_id
join check_file_manage cfm
on cfm.filing_means = 2 and cycle_type = 8
			and cim.check_file_manage_id = cfm.check_file_manage_id
order by section_id, position_id, check_file_manage_id, dm.manage_code
;
		]]>
	</select>

	<select id="getOnLineOfPeriod" resultType="map">
		<![CDATA[ 
select dm.devices_manage_id, cfm.check_file_manage_id, cfm.check_manage_code, cfm.sheet_file_name, 
dm.section_id, dm.line_id, cast(dt.specialized as unsigned) as specialized
from devices_manage dm 
join device_type dt on dm.device_type_id = dt.device_type_id
join
			(select manage_id,check_file_manage_id from device_check_result dcr where dcr.check_confirm_time between #{periodStart} and #{periodEnd}
			and checked_status <> 0
			group by manage_id,check_file_manage_id
			UNION
			SELECT manage_id,check_file_manage_id FROM device_manager_confirm where confirm_time between #{periodStart} and #{periodEnd}
			group by manage_id,check_file_manage_id
			) cim
on dm.devices_manage_id = cim.manage_id
join check_file_manage cfm
on cfm.filing_means = 3 and cycle_type = 8
			and cim.check_file_manage_id = cfm.check_file_manage_id
order by section_id, line_id, check_file_manage_id, dm.manage_code
;
		]]>
	</select>
	
	<select id="getJig" resultType="map">
		<![CDATA[ 
select jm.jig_manage_id, 
jm.manage_code, jm.jig_no, jm.count_in, 
jm.section_id, pos.line_id,
jm.position_id, jm.responsible_operator_id,
pos.process_code, op.name
from jig_manage jm
join 
			(select manage_id from jig_check_result jcr where jcr.check_confirm_time between #{periodStart} and #{periodEnd}
			and checked_status <> 0
			group by manage_id) cim
			on jm.jig_manage_id = cim.manage_id
join position pos
on jm.position_id = pos.position_id
left join operator op
on jm.responsible_operator_id = op.operator_id
order by jm.position_id, jm.section_id, jm.responsible_operator_id, jm.manage_code;
;
		]]>
	</select>

	<delete id="removeCheckStatusWait">
		DELETE FROM device_check_result where checked_status = 0;
	</delete>
		
</mapper>